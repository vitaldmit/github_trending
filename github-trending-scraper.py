import os
import json
import logging

import requests
from bs4 import BeautifulSoup
from dotenv import load_dotenv

logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    filename="logs.log",
    filemode="w",
)


def scrape_github_trending(timeframe="weekly"):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö GitHub.

    Args:
        timeframe: –í—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ (daily, weekly, monthly)

    Returns:
        –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö
    """
    url = f"https://github.com/trending?since={timeframe}"

    # –î–æ–±–∞–≤–ª—è–µ–º User-Agent –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }

    # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    response = requests.get(url, headers=headers)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
    if response.status_code != 200:
        logging.info(f"Error while requesting: {response.status_code}")
        return None

    # –ü–∞—Ä—Å–∏–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É
    soup = BeautifulSoup(response.text, "html.parser")

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –±–ª–æ–∫–∏ —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º–∏
    repo_blocks = soup.select("article.Box-row")

    results = []

    for repo in repo_blocks:
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—Å—ã–ª–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            repo_link_element = repo.select_one("h2 a")
            relative_link = repo_link_element.get("href", "")
            full_link = f"https://github.com{relative_link}"
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–∞–≤—Ç–æ—Ä/–Ω–∞–∑–≤–∞–Ω–∏–µ)
            repo_name = relative_link.strip("/")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            description_element = repo.select_one("p")
            description = description_element.text.strip() if description_element else "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è"
            
            results.append({
                "name": repo_name,
                "url": full_link,
                "description": description
            })
            
        except Exception as e:
            logging.info(f"Error processing repository: {e}")

    return results


def send_to_telegram(chat_id, message, token):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É.
    
    Args:
        chat_id: ID –∫–∞–Ω–∞–ª–∞/–≥—Ä—É–ø–ø—ã
        message: —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        token: Telegram Bot API —Ç–æ–∫–µ–Ω
    """
    if not token:
        raise ValueError("–¢—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å TELEGRAM_BOT_TOKEN –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä")

    api_url = f"https://api.telegram.org/bot{token}/sendMessage"

    payload = {
        "chat_id": chat_id,
        "text": message,
        "parse_mode": "HTML",
        "disable_web_page_preview": True
    }

    response = requests.post(api_url, data=payload)
    
    if response.status_code != 200:
        logging.info(f"Error sending to Telegram: {response.status_code}")
        logging.info(response.text)
        return False

    return True


def main():
    load_dotenv()

    telegram_channel_id = os.environ.get("TELEGRAM_CHANNEL_ID")
    token = os.environ.get("TELEGRAM_BOT_TOKEN")

    logging.info("Get the trending GitHub repositories of the week...")
    trending_repos = scrape_github_trending("weekly")

    if trending_repos is not None and trending_repos:
        logging.info(f"Found {len(trending_repos)} repositories")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
        with open("github_trending_repos.json", "w", encoding="utf-8") as f:
            json.dump(trending_repos, f, ensure_ascii=False, indent=4)

        logging.info("The results are saved to the file 'github_trending_repos.json'")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        message = "<b>üî• GitHub Trending –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∑–∞ –Ω–µ–¥–µ–ª—é</b>\n\n"

        for i, repo in enumerate(trending_repos, 1):
            repo_name = repo["name"]
            repo_url = repo["url"]
            repo_desc = repo["description"]

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏,
            # —Ç–∞–∫ –∫–∞–∫ Telegram –∏–º–µ–µ—Ç –ª–∏–º–∏—Ç –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤ 4096 —Å–∏–º–≤–æ–ª–æ–≤
            if i <= 10:
                message += f"<b>{i}. <a href='{repo_url}'>{repo_name}</a></b>\n"
                message += f"{repo_desc}\n\n"
            else:
                # –ï—Å–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –±–æ–ª—å—à–µ 10, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
                if i == 11:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
                    logging.info("We are sending the first part of repositories to Telegram...")
                    send_to_telegram(telegram_channel_id, message, token)
                    
                    # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    message = "<b>üî• GitHub Trending –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)</b>\n\n"
                
                message += f"<b>{i}. <a href='{repo_url}'>{repo_name}</a></b>\n"
                message += f"{repo_desc}\n\n"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ —á–∞—Å—Ç—è–º –∫–∞–∂–¥—ã–µ 10 —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
                if i % 10 == 0 or i == len(trending_repos):
                    logging.info(f"Sending {i//10 + (1 if i % 10 else 0)} part of repositories to Telegram...")
                    send_to_telegram(telegram_channel_id, message, token)
                    message = "<b>üî• GitHub Trending –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)</b>\n\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –∏—Ö –º–µ–Ω—å—à–µ 10
        if len(trending_repos) <= 10:
            logging.info("Sending repositories to Telegram...")
            send_to_telegram(telegram_channel_id, message, token)

        logging.info("All data has been successfully sent to the Telegram channel!")
    else:
        logging.info("Failed to retrieve trending repositories data")


if __name__ == "__main__":
    main()
